[homing_override]
gcode:
  {% if not 'Z' in params and not 'Y' in params and 'X' in params %}
  HOME_X  
  {% elif not 'Z' in params and not 'X' in params and 'Y' in params %}  
  HOME_Y  
  {% elif not 'Z' in params and 'X' in params and 'Y' in params %}
  HOME_Y
  HOME_X  
  {% elif 'Z' in params and not 'X' in params and not 'Y' in params %}
  HOME_Z  
  {% else %}
  HOME_Y  
  HOME_X  
  HOME_Z  
  {% endif %}

[gcode_macro HOME_X]
gcode:
  G28 X0 F3600
  
[gcode_macro HOME_Y]
gcode:
  G28 Y0 F3600

[gcode_macro HOME_Z]
gcode:
  G28 Z0 F3000
 
[gcode_macro PREHEAT]
description: InputField for the Print start Variable
gcode:
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(185)|float %} # this gives a user input field in case i want another temp for nozzle
  {% set EXTRUDER_TEMP1 = params.EXTRUDER_TEMP1|default(185)|float %} # this gives a user input field in case i want another temp for nozzle
  SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=extruder_temp VALUE='"{EXTRUDER_TEMP}'" ; Save the User Parameter to global Variable
  SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=extruder_temp1 VALUE='"{EXTRUDER_TEMP1}'"
  M104 S{extruder_temp} T0
  M104 S{extruder_temp1} T1 # heats nozzles to value of extruder temp variable without waiting

[gcode_macro START_PRINT]
description: Macro to Prepare the printer to start
variable_extruder_temp: 185
variable_extruder_temp1: 185
gcode:
  M104 S{extruder_temp} T0
  M104 S{extruder_temp1} T1 # heats nozzles to value of extruder temp variable without waiting
  G90
  G28 F1500.0 #homes all axis. i home y first, otherwise i have some weird problems with the endstop x
  G92 E0 #this resets extruder
  G1 Z50 F4000.0 #moves bed 50mm down
  M109 S{extruder_temp} T0
  M109 S{extruder_temp1} T1 # now waits to reach temp.
  PURGELINE

#PurgeLine
[gcode_macro PURGELINE]
gcode:
  {% set EXTRUDER_RATIO = printer.configfile.config.extruder.nozzle_diameter|float / 0.4 %} ; scale extrude amount based on nozzle size
  {% set LAYER_HEIGHT = printer.configfile.config.extruder.nozzle_diameter|float * 0.8 %} ;
  G1 Z2.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
  G1 X1.1 Y20 Z{LAYER_HEIGHT} F5000.0 ; Move to start position
  G1 X1.1 Y200.0 Z{LAYER_HEIGHT} F1500.0 E{15 * EXTRUDER_RATIO} ; Draw the first line
  G1 X1.4 Y200.0 Z{LAYER_HEIGHT} F5000.0 ; Move to side a little
  G1 X1.4 Y20 Z{LAYER_HEIGHT} F1500.0 E{30 * EXTRUDER_RATIO} ; Draw the second line
  G92 E0 ; Reset Extruder
  G1 Z2.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
  G1 X5 Y20 Z{LAYER_HEIGHT} F5000.0 ; Move over to prevent blob squish

[gcode_macro END_PRINT]
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91
    G1 X-2 Y-2 E-3 F300
    # Raise nozzle by 10mm
    G1 Z10 F3000
    G90
    #G28
    HOME_Y  
    HOME_X 
    #Fan
    M106 S255
    # Disable steppers
    M84

[gcode_macro M300]
gcode:
    {% set S = params.S|default(1000)|int %}
    {% set P = params.P|default(100)|int %}
    SET_PIN PIN=BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    G4 P{P}
    SET_PIN PIN=BEEPER_pin VALUE=0

# [gcode_macro M600]
# gcode:
#     {% set X = params.X|default(50)|float %}
#     {% set Y = params.Y|default(0)|float %}
#     {% set Z = params.Z|default(10)|float %}
#     SAVE_GCODE_STATE NAME=M600_state
#     PAUSE
#     G91
#     G1 E-.8 F2700
#     G1 Z{Z}
#     G90
#     G1 X{X} Y{Y} F3000
#     G91
#     G1 E-50 F1000
#     RESTORE_GCODE_STATE NAME=M600_state

# [gcode_macro SET_MATERIAL]
# description: Set values based on material type
# variable_material: ''
# gcode:
#     {% set MATERIAL = params.MATERIAL|default('PLA')|string %} ; Get material type from slicer
#     SET_GCODE_VARIABLE MACRO=SET_MATERIAL VARIABLE=material VALUE='"{MATERIAL}'" ; Save the material type to a variable just because
#     {% if MATERIAL == 'PLA' %} ; If material type is PLA
#         BED_MESH_PROFILE LOAD="pla_mesh" ; Load bed mesh
#         SET_PRESSURE_ADVANCE ADVANCE=0.035 SMOOTH_TIME=0.040 ; Set pressure_advance settings
#         SET_GCODE_OFFSET Z=0 ; Set z_offset
#         SET_VELOCITY_LIMIT VELOCITY=100 ACCEL=2000 ; Set max speed/acceleration
#         SET_INPUT_SHAPER SHAPER_FREQ_X=58.6 SHAPER_FREQ_Y=34.2 SHAPER_TYPE_X=mzv SHAPER_TYPE_Y=mzv ; Set input_shaper
#     {% elif MATERIAL == 'ABS' %} ; If material type is ABS
#         BED_MESH_PROFILE LOAD="abs_mesh" ; Load bed mesh
#         SET_PRESSURE_ADVANCE ADVANCE=0.035 SMOOTH_TIME=0.040 ; Set pressure_advance settings
#         SET_GCODE_OFFSET Z=0 ; Set z_offset
#     {%else %} ; If any other material type
#         BED_MESH_PROFILE LOAD="default" ; Load bed mesh
#         SET_PRESSURE_ADVANCE ADVANCE=0.035 SMOOTH_TIME=0.040 ; Set pressure_advance settings
#         SET_GCODE_OFFSET Z=0 ; Set z_offset
#     {% endif %}




## Set nozzle-specific Configs
## 
## Add this immediately after your start_print line of the start gcode in Prusa/SuperSlicer:
##     SET_NOZZLE NOZZLE='{nozzle_diameter[initial_extruder]}'
## 
## Add this immediately after your start_print line of the start gcode in Cura:
##     SET_NOZZLE NOZZLE='{machine_nozzle_size}'
## 
# [gcode_macro SET_NOZZLE]
# description: Set values based on nozzle diameter
# variable_nozzle: 0
# gcode:
#     {% set NOZZLE = params.NOZZLE|default(0.4)|float %} ; Get nozzle diameter from slicer
#     SET_GCODE_VARIABLE MACRO=SET_NOZZLE VARIABLE=nozzle VALUE={NOZZLE} ; Save the nozzle diameter to a variable just because
#     {% if NOZZLE == 0.4 %} ; If nozzle diameter is 0.4
#         ## Set z_offset settings
#         SET_GCODE_OFFSET Z=0 ; Set z_offset
#     {% elif NOZZLE == 0.2 %} ; If nozzle diameter is 0.2
#         SET_GCODE_OFFSET Z=0 ; Set z_offset
#     {%else %} ; If any other nozzle diameter
#         SET_GCODE_OFFSET Z=0 ; Set z_offset
#     {% endif %}

# [gcode_macro CANCEL_PRINT]
# description: Cancel the actual running print
# rename_existing: CANCEL_PRINT_BASE
# variable_park: True
# gcode:
#     M117 Print Canceled 
#     STATUS_ERROR
#     ## Move head and retract only if not already in the pause state and park set to true
#     {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
#         {% if printer.toolhead.homed_axes == "xyz" %}
#             _TOOLHEAD_PARK_PAUSE_CANCEL
#         {% endif %}
#     {% endif %}
#     game_over_tune
#     TURN_OFF_HEATERS
#     CANCEL_PRINT_BASE

# [gcode_macro PAUSE_PARK]
# gcode:
#     {% set default_x = printer.toolhead.axis_minimum.x + 5 %}
#     {% set default_y = printer.toolhead.axis_maximum.y %}

#     {% if 'save_variables' in printer %}
#         {% set svv = printer.save_variables.variables %}
#         {% if 'park_x' in svv %}
#         {% set default_x = svv.park_x %}
#         {% endif %}
#         {% if 'park_y' in svv %}
#         {% set default_y = svv.park_y %}
#         {% endif %}
#     {% endif %}

#     {% set x = params.X|default(default_x)|float %}
#     {% set y = params.Y|default(default_y)|float %}
#     {% set z = params.Z|default(20)|float %}
#     {% set r = params.R|default(3)|float %}

#     {% if printer.pause_resume.is_paused %}
#         {action_respond_info("Already paused")}
#     {% elif printer.toolhead.homed_axes != "xyz" %}
#         {action_respond_info("Please home XYZ first")}
#     {% else %}
#         PAUSE
#         {% if r > 0.0 %}
#         RETRACT D={r}
#         {% endif %}
#         G27 X{x} Y{y} Z{z}
#     {% endif %}

# [gcode_macro PAUSE]
# description: Pause the actual running print
# rename_existing: PAUSE_BASE
# gcode:
#   PAUSE_BASE
#   _TOOLHEAD_PARK_PAUSE_CANCEL

# [gcode_macro RESUME]
# description: Resume the actual running print
# rename_existing: RESUME_BASE
# gcode:
#   ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####
#   {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
#   #### get VELOCITY parameter if specified ####
#   {% if 'VELOCITY' in params|upper %}
#     {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
#   {%else %}
#     {% set get_params = "" %}
#   {% endif %}
#   ##### end of definitions #####
#   {% if printer.extruder.can_extrude|lower == 'true' %}
#     M83
#     G1 E{extrude} F2100
#     {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
#   {% else %}
#     {action_respond_info("Extruder not hot enough")}
#   {% endif %}  
#   RESUME_BASE {get_params}

# [gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
# description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
# variable_extrude: 1.0
# gcode:
#   ##### set park positon for x and y #####
#   # default is your max posion from your printer.cfg
#   {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
#   {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
#   {% set z_park_delta = 2.0 %}
#   ##### calculate save lift position #####
#   {% set max_z = printer.toolhead.axis_maximum.z|float %}
#   {% set act_z = printer.toolhead.position.z|float %}
#   {% if act_z < (max_z - z_park_delta) %}
#     {% set z_safe = z_park_delta %}
#   {% else %}
#     {% set z_safe = max_z - act_z %}
#   {% endif %}
#   ##### end of definitions #####
#   {% if printer.extruder.can_extrude|lower == 'true' %}
#     M83
#     G1 E-{extrude} F2100
#     {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
#   {% else %}
#     {action_respond_info("Extruder not hot enough")}
#   {% endif %}
#   {% if "xyz" in printer.toolhead.homed_axes %}
#     G91
#     G1 Z{z_safe} F900
#     G90
#     G1 X{x_park} Y{y_park} F6000
#     {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
#   {% else %}
#     {action_respond_info("Printer not homed")}
#   {% endif %}

# [gcode_macro HOME_IF_NEEDED]
# variable_output: 116
# gcode:
#     {% set printcfg = printer['gcode_macro _printcfg'] %}
#     {% if "x" in rawparams|string|lower %}
#         {% set X = True %}
#     {% endif %}
#     {% if "y" in rawparams|string|lower %}
#         {% set Y = True %}
#     {% endif %}
#     {% if "z" in rawparams|string|lower %}
#         {% set Z = True %}
#     {% endif %}
#     {% if rawparams|string|lower == "" %}
#         {% set ALL = True %}
#         {% set X = True %}
#         {% set Y = True %}
#         {% set Z = True %}
#     {% endif %}
#     {% if printer.toolhead.homed_axes != "xyz" %}
#         {% if printcfg.led_status == True %}
#             {printcfg.homing_status}
#         {% endif %}
#         {% if "x" not in printer.toolhead.homed_axes %}
#             {% set home_x = True %}
#         {% endif %}
#         {% if "y" not in printer.toolhead.homed_axes %}
#             {% set home_y = True %}
#         {% endif %}
#         {% if "z" not in printer.toolhead.homed_axes %}
#             {% set home_z = True %}
#         {% endif %}

#         {% if home_x == True and home_y == True and home_z == True %}
#             {% if ALL == True %}
#                 M{output} Homing all axes
#                 G28
#             {% else %}
#                 {% if X == True %}
#                     M{output} Homing X axis
#                     G28 X
#                 {% endif %}
#                 {% if Y == True %}
#                     M{output} Homing Y axis
#                     G28 Y
#                 {% endif %}
#                 {% if Z == True %}
#                     M{output} Homing Z axis
#                     G28 Z
#                 {% endif %}
#             {% endif %}
#         {% else %}
#             {% if home_x == True %}
#                 {% if X == True %}
#                     M{output} Homing X axis
#                     G28 X
#                 {% endif %}
#             {% endif %}
#             {% if home_y == True %}
#                 {% if Y == True %}
#                     M{output} Homing Y axis
#                     G28 Y
#                 {% endif %}
#             {% endif %}
#             {% if home_z == True %}
#                 {% if Z == True %}
#                     M{output} Homing Z axis
#                     G28 Z
#                 {% endif %}
#             {% endif %}
#         {% endif %}
#         {% if printcfg.led_status == True %}
#             {printcfg.ready_status}
#         {% endif %}
#     {% else %}
#         M{output} All axes are homed
#     {% endif %}
